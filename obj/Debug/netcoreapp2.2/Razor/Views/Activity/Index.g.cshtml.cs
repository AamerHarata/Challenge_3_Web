#pragma checksum "D:\GitFolders\Programming\Twente\Challenge_3_Web\Views\Activity\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a55bfdd00e6699af5f1c16db751f80786182741e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Activity_Index), @"mvc.1.0.view", @"/Views/Activity/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Activity/Index.cshtml", typeof(AspNetCore.Views_Activity_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\GitFolders\Programming\Twente\Challenge_3_Web\Views\_ViewImports.cshtml"
using Challenge_3_Web;

#line default
#line hidden
#line 2 "D:\GitFolders\Programming\Twente\Challenge_3_Web\Views\_ViewImports.cshtml"
using Challenge_3_Web.Models;

#line default
#line hidden
#line 1 "D:\GitFolders\Programming\Twente\Challenge_3_Web\Views\Activity\Index.cshtml"
using Challenge_3_Web.Enum;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a55bfdd00e6699af5f1c16db751f80786182741e", @"/Views/Activity/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"190169446eebcf7dbf03da91d3a55e523e098006", @"/Views/_ViewImports.cshtml")]
    public class Views_Activity_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(29, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
#line 4 "D:\GitFolders\Programming\Twente\Challenge_3_Web\Views\Activity\Index.cshtml"
  
    ViewBag.Title = "title";
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(95, 48, true);
            WriteLiteral("\r\n<div class=\"text-center\">\r\n    <div>\r\n        ");
            EndContext();
            BeginContext(144, 175, false);
#line 11 "D:\GitFolders\Programming\Twente\Challenge_3_Web\Views\Activity\Index.cshtml"
   Write(Html.DropDownList(" " ,
            new SelectList(Enum.GetValues(typeof(Activity))), "Select Activity",
            new {@class = "form-control", @id="activity-animation"}));

#line default
#line hidden
            EndContext();
            BeginContext(319, 179, true);
            WriteLiteral("\r\n    </div>\r\n    <br/>\r\n    <h4 id=\"activity-text\"class=\"display-4\">Waiting for data</h4>\r\n    <hr/>\r\n    <img id=\"activity-img\" src=\"Files/Activity/Sleeping.gif\"/>\r\n</div>\r\n\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(517, 1578, true);
                WriteLiteral(@"
    <script>
        $(document).ready(function() {
            let currentActivity = ""None"";
            setInterval(function() { invokeActivity() }, 3000);
//            $(""#activity-animation"").change(function() {
//                const selectedActivity = $(this).find("":selected"").text();
//                console.log(selectedActivity);
//                $(""#activity-img"").attr(""src"", ""Files/Activity/""+selectedActivity+"".gif"");
//                $(""#activity-text"").text(selectedActivity);
//
//            });
            function invokeActivity() {
                
                $.ajax({
                    type: ""GET"",
                    url: ""/GetLatestActivity"",
                    success: function(response) {
                        console.log(response);
                        const respActivity = response.activity;
                        if (respActivity !== currentActivity) {
                            if (respActivity === ""None"") {
                                $(""#");
                WriteLiteral(@"activity-img"").attr(""src"", ""Files/Activity/Sleeping.gif"");
                                $(""#activity-text"").text(""No Signal!"");
                            } else {
                                $(""#activity-img"").attr(""src"", `Files/Activity/${respActivity}.gif`);
                                $(""#activity-text"").text(respActivity);
                            }

                            currentActivity = respActivity;
                        }
                    }
                });
            }
        })
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
